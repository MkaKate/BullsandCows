{"version":3,"sources":["play.js"],"names":["document","addEventListener","getElementById","ground","getContext","setInterval","ctx","drawGame","display","querySelector","output","querySelectorAll","output1","console","count","numbers","length","randomNum","Math","floor","random","toString","includes","generateUniqueRandomNumbers","join","handleButtonClick","itemText","currentValue","value","homeButton","textContent","style","marginTop","Set","input","location","isValidInput","userGuess","createElement","userInput","randomNumbers","i","compareNumbersBull","matchingNumbers","bullsDiv","appendChild","bulls","cows","nonMatchingNumbers","push","compareNumbersCow","cowsDiv","output2","winScreen","position","left","width","showWinScreen","top","height","backgroundColor","justifyContent","alignItems","winMessage","log","btns","forEach","item","e","key"],"mappings":"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","file":"play.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const canvas = document.getElementById(\"game1\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const ground = new Image();\r\n    ground.src = \"img/fon2.jpg\";\r\n\r\n    function drawGame() {\r\n        ctx.drawImage(ground, 0, 0);\r\n    }\r\n    let game = setInterval(drawGame, 100);\r\n\r\n    const display = document.querySelector(\".display\");\r\n    const btns = document.querySelectorAll('.js-btn');\r\n    const output = document.getElementById(\"output\");\r\n    const output1 = document.getElementById(\"output1\");\r\n    const output2 = document.getElementById(\"output2\");\r\n\r\n    // const winScreen = document.getElementById('winScreen');\r\n    // const homeButton = document.getElementById('homeButton');\r\n\r\n    // Generate random numbers when the page loads\r\n    let randomNumbers = generateUniqueRandomNumbers(4);\r\n    console.log(\"Generated numbers:\", randomNumbers.join(''));//об'єднує елементи масиву в один рядок без розділювачів між ними.\r\n\r\n    btns.forEach((item) => {//Використовується метод forEach для проходження по кожному елементу в колекції btns. btns - це, імовірно, колекція кнопок.\r\n        item.addEventListener('click', (e) => {//Додається обробник подій, який виконується при натисканні на кнопку.\r\n           \r\n                handleButtonClick(e.target.textContent);\r\n            });\r\n        });\r\n            // let itemText = e.target.textContent;//itemText містить текстове значення кнопки, яка була натиснута.\r\n            // let currentValue = display.value;//currentValue містить поточне значення поля display, яке, імовірно, є текстовим полем або іншим елементом введення.\r\n            display.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    handleButtonClick('OK');\r\n                }\r\n            });\r\n\r\n            function handleButtonClick(itemText) {\r\n                let currentValue = display.value;\r\n            if (itemText === \"DEL\") {\r\n                display.value = \"\";\r\n            } else if (itemText === \"OK\") {\r\n                // output.textContent = display.value; //Значення поля display копіюється в output (ймовірно, елемент для виведення результату).\r\n                // compareNumbersBull(display.value, randomNumbers);//Викликається функція compareNumbers, яка порівнює значення display з randomNumbers\r\n                // compareNumbersCow(display.value, randomNumbers);\r\n                // display.value = \"\";\r\n                if (!isValidInput(display.value)) { // Перевірка на правильність введених даних\r\n                    return;\r\n                }\r\n\r\n                let userGuess = document.createElement('div');//Цей рядок створює новий HTML елемент <div>, який буде використаний для відображення введеного числа користувачем.\r\n                userGuess.textContent = display.value;//Встановлює текстовий вміст новоствореного елемента userGuess на поточне значення поля вводу display. Це означає, що в цьому елементі буде відображено те число, яке користувач ввів.\r\n                output.appendChild(userGuess);//Додає новостворений елемент userGuess до контейнера output. Таким чином, введене число користувача буде відображене на сторінці в контейнері output.\r\n\r\n                let bulls = compareNumbersBull(display.value, randomNumbers);//Викликає функцію compareNumbersBull, яка порівнює введене користувачем число (display.value) з випадково згенерованими числами (randomNumbers). Ця функція повертає кількість Bulls, тобто кількість чисел, які правильно вгадані і знаходяться на правильних позиціях.\r\n                let bullsDiv = document.createElement('div');\r\n                bullsDiv.textContent = bulls;//Встановлює текстовий вміст новоствореного елемента bullsDiv на кількість Bulls, яку повернула функція compareNumbersBull.\r\n                output1.appendChild(bullsDiv);//Додає новостворений елемент bullsDiv до контейнера output1. Таким чином, кількість Bulls буде відображена на сторінці в контейнері output1.\r\n\r\n                let cows = compareNumbersCow(display.value, randomNumbers);\r\n                let cowsDiv = document.createElement('div');\r\n                cowsDiv.textContent = cows;\r\n                output2.appendChild(cowsDiv);\r\n\r\n                display.value = \"\";\r\n\r\n\r\n                if (bulls === 4) {\r\n                    showWinScreen();\r\n                }\r\n            } else {\r\n                if (currentValue.length < 4 && !currentValue.includes(itemText)) {//Перевіряється, що довжина значення display менша за 4 та це значення не містить текст кнопки.\r\n                    display.value += itemText;//Якщо обидві умови виконуються, текст кнопки додається до display.\r\n                }\r\n            }\r\n        }\r\n    \r\n\r\n    function generateUniqueRandomNumbers(count) {\r\n        const numbers = [];//Цей масив буде містити згенеровані унікальні випадкові числа.\r\n        while (numbers.length < count) {\r\n            const randomNum = Math.floor(Math.random() * 10).toString();\r\n            /*Math.random() * 10 генерує випадкове число від 0 до 9 (не включно 10).\r\n              Math.floor() округлює це число до найближчого меншого цілого, перетворюючи його на ціле число від 0 до 9.\r\n              .toString() перетворює це число на рядок. */\r\n            if (!numbers.includes(randomNum)) {   // перевіряє, чи вже існує це число в масиві.\r\n                numbers.push(randomNum);   //Якщо його немає в масиві, воно додається до масиву numbers.\r\n            }\r\n\r\n        }\r\n\r\n        return numbers;\r\n    }\r\n\r\n    \r\n\r\n    function compareNumbersBull(userInput, randomNumbers) {//Функція приймає два параметри: userInput і randomNumbers, які є масивами чисел\r\n        let matchingNumbers = [];//Масив nonMatchingNumbers буде зберігати числа з userInput, які не співпадають з відповідними числами в randomNumbers.\r\n        for (let i = 0; i < userInput.length; i++) {\r\n            if (userInput[i] == randomNumbers[i]) {//перевіряє, чи елемент userInput[i] не співпадає з відповідним елементом randomNumbers[i]\r\n                matchingNumbers.push(userInput[i]);//Якщо вони не співпадають, userInput[i] додається до масиву nonMatchingNumbers\r\n            }\r\n        }\r\n        // if(matchingNumbers.length === 4){\r\n\r\n        //     showWinScreen(); // Викликаємо функцію для відображення екрану перемоги\r\n        // }\r\n        return matchingNumbers.length;//Цей рядок повертає кількість елементів у масиві matchingNumbers. Тобто, повертається кількість чисел, які співпали і за значенням, і за позицією.\r\n       \r\n    } \r\n\r\n\r\n    function compareNumbersCow(userInput, randomNumbers) {//Функція приймає два параметри: userInput і randomNumbers, які є масивами чисел\r\n        let nonMatchingNumbers = [];//Масив nonMatchingNumbers буде зберігати числа з userInput, які не співпадають з відповідними числами в randomNumbers.\r\n            for (let i = 0; i < userInput.length; i++) {\r\n                if (randomNumbers.includes(userInput[i]) && userInput[i] != randomNumbers[i]) {\r\n                    nonMatchingNumbers.push(userInput[i]); \r\n            }\r\n        }\r\n        return nonMatchingNumbers.length;\r\n    }\r\n   \r\n\r\n\r\nfunction showWinScreen() {\r\n    const winScreen = document.createElement('div');//Створює новий div елемент.\r\n    winScreen.style.position = 'fixed';\r\n    winScreen.style.top = '0';\r\n    winScreen.style.left = '0';\r\n    winScreen.style.width = '100%';\r\n    winScreen.style.height = '100%';\r\n    winScreen.style.backgroundColor = 'white';\r\n    winScreen.style.display = 'flex';\r\n    winScreen.style.flexDirection = 'column';\r\n    winScreen.style.justifyContent = 'center';\r\n    winScreen.style.alignItems = 'center';\r\n\r\n    const winMessage = document.createElement('h1');//Створює новий h1 елемент.\r\n    winMessage.textContent = 'WIN';//Встановлює текст для цього елементу.\r\n    winScreen.appendChild(winMessage);//Додає цей елемент як дочірній до winScreen.\r\n\r\n    const homeButton = document.createElement('button');//Створює новий button елемент.\r\n    homeButton.textContent = 'Go to Home';//Встановлює текст для цієї кнопки.\r\n    homeButton.style.marginTop = '20px'; //Додає верхній відступ до кнопки.\r\n    homeButton.addEventListener('click', function() {//Додає обробник подій для кліку на кнопку, який перезавантажує сторінку.\r\n        window.location.reload();//Додає цю кнопку як дочірній елемент до winScreen.\r\n    });\r\n    winScreen.appendChild(homeButton);// Додає цю кнопку як дочірній елемент до winScreen.//Додає winScreen до body документа, тим самим роблячи його видимим на сторінці.\r\n\r\n    document.body.appendChild(winScreen);//Додає winScreen до body документа, тим самим роблячи його видимим на сторінці.\r\n}\r\nfunction isValidInput(input) {\r\n    const pattern = /^[0-9]{4}$/;\r\n    if (!pattern.test(input)) {\r\n    return false;\r\n}\r\nconst uniqueDigits = new Set(input);\r\nreturn uniqueDigits.size === 4;\r\n}\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     const displays = document.querySelectorAll('.display');\r\n//     const btns = document.querySelectorAll('.js-btn');\r\n//     let currentDisplayIndex = 0;\r\n\r\n//     btns.forEach((btn) => {\r\n//         btn.addEventListener('click', (e) => {\r\n//             let btnText = e.target.textContent;\r\n\r\n//             if (btnText === 'OK') {\r\n//                 alert('OK button clicked');\r\n//             } else if (btnText === 'DEL') {\r\n//                 if (currentDisplayIndex > 0) {\r\n//                     currentDisplayIndex--;\r\n//                     displays[currentDisplayIndex].value = '';\r\n//                 }\r\n//             } else if (/^[0-9]$/.test(btnText)) {\r\n//                 if (currentDisplayIndex < displays.length) {\r\n//                     displays[currentDisplayIndex].value = btnText;\r\n//                     currentDisplayIndex++;\r\n//                 }\r\n//             }\r\n//         });\r\n//     });\r\n\r\n//     displays.forEach((display, index) => {\r\n//         display.addEventListener('focus', () => {\r\n//             currentDisplayIndex = index;\r\n//         });\r\n//     });\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  document.getElementById('singleNumber').addEventListener('input', function (e) {\r\n//     let value = e.target.value;\r\n//     if (value.length > 1) {\r\n//         e.target.value = value.slice(0, 1);\r\n//     }\r\n//     if (!/^\\d$/.test(value) && value !== \"\") {\r\n//         e.target.value = '';\r\n//     }\r\n// });\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     const buttons = document.querySelectorAll('.btn');\r\n//     const displays = document.querySelectorAll('.display');\r\n//     let currentDisplayIndex = 0;\r\n\r\n//     buttons.forEach(button => {\r\n//         button.addEventListener('click', () => {\r\n//             const value = button.textContent;\r\n//             if (value === 'OK') {\r\n//                 alert('OK button clicked');\r\n//             } else if (value === 'DEL') {\r\n//                 if (currentDisplayIndex > 0) {\r\n//                     currentDisplayIndex--;\r\n//                     displays[currentDisplayIndex].value = '';\r\n//                 }\r\n//             } else {\r\n//                 if (currentDisplayIndex < displays.length && /^[0-9]$/.test(value)) {\r\n//                     displays[currentDisplayIndex].value = value;\r\n//                     currentDisplayIndex++;\r\n//                 }\r\n//             }\r\n//         });\r\n//     });\r\n\r\n//     displays.forEach((display, index) => {\r\n//         display.addEventListener('focus', () => {\r\n//             currentDisplayIndex = index;\r\n//         });\r\n//     });\r\n// });\r\n\r\n"]}