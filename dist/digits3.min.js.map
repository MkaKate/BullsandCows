{"version":3,"sources":["digits3.js"],"names":["document","addEventListener","getElementById","ground","getContext","setInterval","ctx","drawGame","display","querySelector","clueBtn","querySelectorAll","output","output1","console","count","numbers","generateUniqueRandomNumbers","randomNum","Math","floor","random","toString","includes","push","join","currentValue","handleButtonClick","itemText","value","isValidInput","winScreen","input","test","userGuess","createElement","textContent","appendChild","userInput","randomNumbers","i","length","compareNumbersBull","matchingNumbers","bullsDiv","cows","nonMatchingNumbers","compareNumbersCow","cowsDiv","content","containerHeight","element","clientHeight","contentHeight","scrollHeight","translateY","animateScroll","style","transform","bulls","position","showClue","top","padding","backgroundColor","color","showWinScreen","fontSize","borderRadius","location","log","btns","forEach","item","e","key","digit","classList","contains","remove","add"],"mappings":"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","file":"digits3.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const canvas = document.getElementById(\"game1\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const ground = new Image();\r\n    ground.src = \"img/fon2.jpg\";\r\n\r\n    function drawGame() {\r\n        ctx.drawImage(ground, 0, 0);\r\n    }\r\n    let game = setInterval(drawGame, 100);\r\n\r\n    const display = document.querySelector(\".display\");\r\n    const btns = document.querySelectorAll('.js-btn');\r\n    const clueBtn = document.querySelector('.js-clue');\r\n    const output = document.getElementById(\"output\");\r\n    const output1 = document.getElementById(\"output1\");\r\n    const output2 = document.getElementById(\"output2\");\r\n\r\n    // const winScreen = document.getElementById('winScreen');\r\n    // const homeButton = document.getElementById('homeButton');\r\n\r\n    // Generate random numbers when the page loads\r\n    let randomNumbers = generateUniqueRandomNumbers(3);\r\n    console.log(\"Generated numbers:\", randomNumbers.join(''));//об'єднує елементи масиву в один рядок без розділювачів між ними.\r\n\r\n    btns.forEach((item) => {//Використовується метод forEach для проходження по кожному елементу в колекції btns. btns - це, імовірно, колекція кнопок.\r\n        item.addEventListener('click', (e) => {//Додається обробник подій, який виконується при натисканні на кнопку.\r\n           \r\n                handleButtonClick(e.target.textContent);\r\n            });\r\n        });\r\n        clueBtn.addEventListener('click', () => {\r\n            showClue();\r\n        });\r\n    \r\n            // let itemText = e.target.textContent;//itemText містить текстове значення кнопки, яка була натиснута.\r\n            // let currentValue = display.value;//currentValue містить поточне значення поля display, яке, імовірно, є текстовим полем або іншим елементом введення.\r\n            display.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    handleButtonClick('OK');\r\n                }\r\n            });\r\n\r\n            function handleButtonClick(itemText) {\r\n                let currentValue = display.value;\r\n            if (itemText === \"DEL\") {\r\n                display.value = \"\";\r\n            } else if (itemText === \"OK\") {\r\n                // output.textContent = display.value; //Значення поля display копіюється в output (ймовірно, елемент для виведення результату).\r\n                // compareNumbersBull(display.value, randomNumbers);//Викликається функція compareNumbers, яка порівнює значення display з randomNumbers\r\n                // compareNumbersCow(display.value, randomNumbers);\r\n                // display.value = \"\";\r\n                if (!isValidInput(display.value)) { // Перевірка на правильність введених даних\r\n                    return;\r\n                }\r\n\r\n                let userGuess = document.createElement('div');//Цей рядок створює новий HTML елемент <div>, який буде використаний для відображення введеного числа користувачем.\r\n                userGuess.textContent = display.value;//Встановлює текстовий вміст новоствореного елемента userGuess на поточне значення поля вводу display. Це означає, що в цьому елементі буде відображено те число, яке користувач ввів.\r\n                // userGuess.classList.add('scroll-item');\r\n                output.appendChild(userGuess);//Додає новостворений елемент userGuess до контейнера output. Таким чином, введене число користувача буде відображене на сторінці в контейнері output.\r\n                \r\n\r\n                let bulls = compareNumbersBull(display.value, randomNumbers);//Викликає функцію compareNumbersBull, яка порівнює введене користувачем число (display.value) з випадково згенерованими числами (randomNumbers). Ця функція повертає кількість Bulls, тобто кількість чисел, які правильно вгадані і знаходяться на правильних позиціях.\r\n                let bullsDiv = document.createElement('div');\r\n                bullsDiv.textContent = bulls;//Встановлює текстовий вміст новоствореного елемента bullsDiv на кількість Bulls, яку повернула функція compareNumbersBull.\r\n                // bullsDiv.classList.add('scroll-item');\r\n                output1.appendChild(bullsDiv);//Додає новостворений елемент bullsDiv до контейнера output1. Таким чином, кількість Bulls буде відображена на сторінці в контейнері output1.\r\n                \r\n\r\n                let cows = compareNumbersCow(display.value, randomNumbers);\r\n                let cowsDiv = document.createElement('div');\r\n                cowsDiv.textContent = cows;\r\n                // cowsDiv.classList.add('scroll-item');\r\n                output2.appendChild(cowsDiv);\r\n\r\n                display.value = \"\";\r\n                animateScroll();\r\n\r\n                if (bulls === 3) {\r\n                    showWinScreen();\r\n                }\r\n            } else {\r\n                if (currentValue.length < 3 && !currentValue.includes(itemText)) {//Перевіряється, що довжина значення display менша за 4 та це значення не містить текст кнопки.\r\n                    display.value += itemText;//Якщо обидві умови виконуються, текст кнопки додається до display.\r\n                }\r\n            }\r\n        }\r\n    \r\n\r\n    function generateUniqueRandomNumbers(count) {\r\n        const numbers = [];//Цей масив буде містити згенеровані унікальні випадкові числа.\r\n        while (numbers.length < count) {\r\n            const randomNum = Math.floor(Math.random() * 10).toString();\r\n            /*Math.random() * 10 генерує випадкове число від 0 до 9 (не включно 10).\r\n              Math.floor() округлює це число до найближчого меншого цілого, перетворюючи його на ціле число від 0 до 9.\r\n              .toString() перетворює це число на рядок. */\r\n            if (!numbers.includes(randomNum)) {   // перевіряє, чи вже існує це число в масиві.\r\n                numbers.push(randomNum);   //Якщо його немає в масиві, воно додається до масиву numbers.\r\n            }\r\n        }\r\n        return numbers;\r\n    }\r\n\r\n    \r\n\r\n    function compareNumbersBull(userInput, randomNumbers) {//Функція приймає два параметри: userInput і randomNumbers, які є масивами чисел\r\n        let matchingNumbers = [];//Масив nonMatchingNumbers буде зберігати числа з userInput, які не співпадають з відповідними числами в randomNumbers.\r\n        for (let i = 0; i < userInput.length; i++) {\r\n            if (userInput[i] == randomNumbers[i]) {//перевіряє, чи елемент userInput[i] не співпадає з відповідним елементом randomNumbers[i]\r\n                matchingNumbers.push(userInput[i]);//Якщо вони не співпадають, userInput[i] додається до масиву nonMatchingNumbers\r\n            }\r\n        }\r\n        return matchingNumbers.length;//Цей рядок повертає кількість елементів у масиві matchingNumbers. Тобто, повертається кількість чисел, які співпали і за значенням, і за позицією.\r\n    } \r\n\r\n\r\n    function compareNumbersCow(userInput, randomNumbers) {//Функція приймає два параметри: userInput і randomNumbers, які є масивами чисел\r\n        let nonMatchingNumbers = [];//Масив nonMatchingNumbers буде зберігати числа з userInput, які не співпадають з відповідними числами в randomNumbers.\r\n            for (let i = 0; i < userInput.length; i++) {\r\n                if (randomNumbers.includes(userInput[i]) && userInput[i] != randomNumbers[i]) {\r\n                    nonMatchingNumbers.push(userInput[i]); \r\n            }\r\n        }\r\n        return nonMatchingNumbers.length;\r\n    }\r\n\r\n    function animateScroll() {\r\n        const outputs = [output, output1, output2]; \r\n        outputs.forEach(element => { \r\n            const content = element.querySelector('.output-content'); \r\n            if (content) { // Перевірка наявності елемента\r\n                const containerHeight = element.clientHeight; \r\n                const contentHeight = content.scrollHeight; \r\n    \r\n                if (contentHeight > containerHeight) { \r\n                    const translateY = containerHeight - contentHeight; \r\n                    content.style.transform = `translateY(${translateY}px)`; \r\n                }\r\n            }\r\n        });\r\n    }\r\n    function showClue() {\r\n        if (!display.value.includes(randomNumbers[0])) {\r\n            display.value = randomNumbers[0];\r\n        }\r\n    }\r\n\r\n    function showWinScreen() {\r\n        // Створюємо елемент для вікна з повідомленням про виграш\r\n        const winScreen = document.createElement('div');\r\n        winScreen.textContent = \"You Win!\";\r\n        \r\n        // Стилі для вікна повідомлення про виграш\r\n        winScreen.style.position = 'fixed';\r\n        winScreen.style.top = '50%';\r\n        winScreen.style.left = '50%';\r\n        winScreen.style.transform = 'translate(-50%, -50%)';\r\n        winScreen.style.padding = '20px';\r\n        winScreen.style.backgroundColor = 'rgba(0, 255, 0, 0.8)';\r\n        winScreen.style.color = 'white';    \r\n        winScreen.style.fontSize = '24px';\r\n        winScreen.style.borderRadius = '10px';\r\n        winScreen.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';\r\n        winScreen.style.zIndex = '1000';\r\n    \r\n        // Додаємо вікно до тіла документа\r\n        document.body.appendChild(winScreen);\r\n    \r\n        // Повернення на головну сторінку через 3 секунди\r\n        setTimeout(() => {\r\n            window.location.href = 'index.html';\r\n        }, 3000);\r\n    }\r\n    \r\n\r\n    function isValidInput(input) {\r\n        return /^\\d{3}$/.test(input);\r\n    }\r\n});\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const digits = document.querySelectorAll('.digit');\r\n\r\n    digits.forEach(digit => {\r\n        digit.addEventListener('click', () => {\r\n            if (digit.classList.contains('excluded')) {\r\n                digit.classList.remove('excluded');\r\n                digit.classList.add('included');\r\n            } else if (digit.classList.contains('included')) {\r\n                digit.classList.remove('included');\r\n            } else {\r\n                digit.classList.add('excluded');\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n\r\n"]}