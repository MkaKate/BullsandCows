{"version":3,"sources":["play.js"],"names":["document","addEventListener","canvas","getElementById","ctx","getContext","ground","Image","src","drawGame","drawImage","game","setInterval","display","querySelector","btns","querySelectorAll","output","output1","output2","randomNumbers","generateUniqueRandomNumbers","console","log","join","forEach","item","e","handleButtonClick","target","textContent","key","itemText","currentValue","value","isValidInput","userGuess","createElement","appendChild","bulls","compareNumbersBull","bullsDiv","cows","compareNumbersCow","cowsDiv","showWinScreen","length","includes","count","numbers","randomNum","Math","floor","random","toString","push","userInput","matchingNumbers","i","nonMatchingNumbers","winScreen","style","position","top","left","width","height","backgroundColor","flexDirection","justifyContent","alignItems","winMessage","homeButton","marginTop","window","location","reload","body","input","pattern","test","uniqueDigits","Set","size"],"mappings":"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B,KAFD;AAGAhB,IAAAA,SAAS,CAACtB,WAAV,CAAsBkC,UAAtB,EAvBqB,CAuBa;;AAElCxE,IAAAA,QAAQ,CAAC6E,IAAT,CAAcvC,WAAd,CAA0BsB,SAA1B,EAzBqB,CAyBgB;AACxC;;AACD,WAASzB,YAAT,CAAsB2C,KAAtB,EAA6B;AACzB,QAAMC,OAAO,GAAG,YAAhB;;AACA,QAAI,CAACA,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAL,EAA0B;AAC1B,aAAO,KAAP;AACH;;AACD,QAAMG,YAAY,GAAG,IAAIC,GAAJ,CAAQJ,KAAR,CAArB;AACA,WAAOG,YAAY,CAACE,IAAb,KAAsB,CAA7B;AACC;AACA,CAjKD,E,CAyMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const canvas = document.getElementById(\"game1\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const ground = new Image();\r\n    ground.src = \"img/fon2.jpg\";\r\n\r\n    function drawGame() {\r\n        ctx.drawImage(ground, 0, 0);\r\n    }\r\n    let game = setInterval(drawGame, 100);\r\n\r\n    const display = document.querySelector(\".display\");\r\n    const btns = document.querySelectorAll('.js-btn');\r\n    const output = document.getElementById(\"output\");\r\n    const output1 = document.getElementById(\"output1\");\r\n    const output2 = document.getElementById(\"output2\");\r\n\r\n    // const winScreen = document.getElementById('winScreen');\r\n    // const homeButton = document.getElementById('homeButton');\r\n\r\n    // Generate random numbers when the page loads\r\n    let randomNumbers = generateUniqueRandomNumbers(4);\r\n    console.log(\"Generated numbers:\", randomNumbers.join(''));//об'єднує елементи масиву в один рядок без розділювачів між ними.\r\n\r\n    btns.forEach((item) => {//Використовується метод forEach для проходження по кожному елементу в колекції btns. btns - це, імовірно, колекція кнопок.\r\n        item.addEventListener('click', (e) => {//Додається обробник подій, який виконується при натисканні на кнопку.\r\n           \r\n                handleButtonClick(e.target.textContent);\r\n            });\r\n        });\r\n            // let itemText = e.target.textContent;//itemText містить текстове значення кнопки, яка була натиснута.\r\n            // let currentValue = display.value;//currentValue містить поточне значення поля display, яке, імовірно, є текстовим полем або іншим елементом введення.\r\n            display.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    handleButtonClick('OK');\r\n                }\r\n            });\r\n\r\n            function handleButtonClick(itemText) {\r\n                let currentValue = display.value;\r\n            if (itemText === \"DEL\") {\r\n                display.value = \"\";\r\n            } else if (itemText === \"OK\") {\r\n                // output.textContent = display.value; //Значення поля display копіюється в output (ймовірно, елемент для виведення результату).\r\n                // compareNumbersBull(display.value, randomNumbers);//Викликається функція compareNumbers, яка порівнює значення display з randomNumbers\r\n                // compareNumbersCow(display.value, randomNumbers);\r\n                // display.value = \"\";\r\n                if (!isValidInput(display.value)) { // Перевірка на правильність введених даних\r\n                    return;\r\n                }\r\n\r\n                let userGuess = document.createElement('div');//Цей рядок створює новий HTML елемент <div>, який буде використаний для відображення введеного числа користувачем.\r\n                userGuess.textContent = display.value;//Встановлює текстовий вміст новоствореного елемента userGuess на поточне значення поля вводу display. Це означає, що в цьому елементі буде відображено те число, яке користувач ввів.\r\n                output.appendChild(userGuess);//Додає новостворений елемент userGuess до контейнера output. Таким чином, введене число користувача буде відображене на сторінці в контейнері output.\r\n\r\n                let bulls = compareNumbersBull(display.value, randomNumbers);//Викликає функцію compareNumbersBull, яка порівнює введене користувачем число (display.value) з випадково згенерованими числами (randomNumbers). Ця функція повертає кількість Bulls, тобто кількість чисел, які правильно вгадані і знаходяться на правильних позиціях.\r\n                let bullsDiv = document.createElement('div');\r\n                bullsDiv.textContent = bulls;//Встановлює текстовий вміст новоствореного елемента bullsDiv на кількість Bulls, яку повернула функція compareNumbersBull.\r\n                output1.appendChild(bullsDiv);//Додає новостворений елемент bullsDiv до контейнера output1. Таким чином, кількість Bulls буде відображена на сторінці в контейнері output1.\r\n\r\n                let cows = compareNumbersCow(display.value, randomNumbers);\r\n                let cowsDiv = document.createElement('div');\r\n                cowsDiv.textContent = cows;\r\n                output2.appendChild(cowsDiv);\r\n\r\n                display.value = \"\";\r\n\r\n\r\n                if (bulls === 4) {\r\n                    showWinScreen();\r\n                }\r\n            } else {\r\n                if (currentValue.length < 4 && !currentValue.includes(itemText)) {//Перевіряється, що довжина значення display менша за 4 та це значення не містить текст кнопки.\r\n                    display.value += itemText;//Якщо обидві умови виконуються, текст кнопки додається до display.\r\n                }\r\n            }\r\n        }\r\n    \r\n\r\n    function generateUniqueRandomNumbers(count) {\r\n        const numbers = [];//Цей масив буде містити згенеровані унікальні випадкові числа.\r\n        while (numbers.length < count) {\r\n            const randomNum = Math.floor(Math.random() * 10).toString();\r\n            /*Math.random() * 10 генерує випадкове число від 0 до 9 (не включно 10).\r\n              Math.floor() округлює це число до найближчого меншого цілого, перетворюючи його на ціле число від 0 до 9.\r\n              .toString() перетворює це число на рядок. */\r\n            if (!numbers.includes(randomNum)) {   // перевіряє, чи вже існує це число в масиві.\r\n                numbers.push(randomNum);   //Якщо його немає в масиві, воно додається до масиву numbers.\r\n            }\r\n\r\n        }\r\n\r\n        return numbers;\r\n    }\r\n\r\n    \r\n\r\n    function compareNumbersBull(userInput, randomNumbers) {//Функція приймає два параметри: userInput і randomNumbers, які є масивами чисел\r\n        let matchingNumbers = [];//Масив nonMatchingNumbers буде зберігати числа з userInput, які не співпадають з відповідними числами в randomNumbers.\r\n        for (let i = 0; i < userInput.length; i++) {\r\n            if (userInput[i] == randomNumbers[i]) {//перевіряє, чи елемент userInput[i] не співпадає з відповідним елементом randomNumbers[i]\r\n                matchingNumbers.push(userInput[i]);//Якщо вони не співпадають, userInput[i] додається до масиву nonMatchingNumbers\r\n            }\r\n        }\r\n        // if(matchingNumbers.length === 4){\r\n\r\n        //     showWinScreen(); // Викликаємо функцію для відображення екрану перемоги\r\n        // }\r\n        return matchingNumbers.length;//Цей рядок повертає кількість елементів у масиві matchingNumbers. Тобто, повертається кількість чисел, які співпали і за значенням, і за позицією.\r\n       \r\n    } \r\n\r\n\r\n    function compareNumbersCow(userInput, randomNumbers) {//Функція приймає два параметри: userInput і randomNumbers, які є масивами чисел\r\n        let nonMatchingNumbers = [];//Масив nonMatchingNumbers буде зберігати числа з userInput, які не співпадають з відповідними числами в randomNumbers.\r\n            for (let i = 0; i < userInput.length; i++) {\r\n                if (randomNumbers.includes(userInput[i]) && userInput[i] != randomNumbers[i]) {\r\n                    nonMatchingNumbers.push(userInput[i]); \r\n            }\r\n        }\r\n        return nonMatchingNumbers.length;\r\n    }\r\n   \r\n\r\n\r\nfunction showWinScreen() {\r\n    const winScreen = document.createElement('div');//Створює новий div елемент.\r\n    winScreen.style.position = 'fixed';\r\n    winScreen.style.top = '0';\r\n    winScreen.style.left = '0';\r\n    winScreen.style.width = '100%';\r\n    winScreen.style.height = '100%';\r\n    winScreen.style.backgroundColor = 'white';\r\n    winScreen.style.display = 'flex';\r\n    winScreen.style.flexDirection = 'column';\r\n    winScreen.style.justifyContent = 'center';\r\n    winScreen.style.alignItems = 'center';\r\n\r\n    const winMessage = document.createElement('h1');//Створює новий h1 елемент.\r\n    winMessage.textContent = 'WIN';//Встановлює текст для цього елементу.\r\n    winScreen.appendChild(winMessage);//Додає цей елемент як дочірній до winScreen.\r\n\r\n    const homeButton = document.createElement('button');//Створює новий button елемент.\r\n    homeButton.textContent = 'Go to Home';//Встановлює текст для цієї кнопки.\r\n    homeButton.style.marginTop = '20px'; //Додає верхній відступ до кнопки.\r\n    homeButton.addEventListener('click', function() {//Додає обробник подій для кліку на кнопку, який перезавантажує сторінку.\r\n        window.location.reload();//Додає цю кнопку як дочірній елемент до winScreen.\r\n    });\r\n    winScreen.appendChild(homeButton);// Додає цю кнопку як дочірній елемент до winScreen.//Додає winScreen до body документа, тим самим роблячи його видимим на сторінці.\r\n\r\n    document.body.appendChild(winScreen);//Додає winScreen до body документа, тим самим роблячи його видимим на сторінці.\r\n}\r\nfunction isValidInput(input) {\r\n    const pattern = /^[0-9]{4}$/;\r\n    if (!pattern.test(input)) {\r\n    return false;\r\n}\r\nconst uniqueDigits = new Set(input);\r\nreturn uniqueDigits.size === 4;\r\n}\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     const displays = document.querySelectorAll('.display');\r\n//     const btns = document.querySelectorAll('.js-btn');\r\n//     let currentDisplayIndex = 0;\r\n\r\n//     btns.forEach((btn) => {\r\n//         btn.addEventListener('click', (e) => {\r\n//             let btnText = e.target.textContent;\r\n\r\n//             if (btnText === 'OK') {\r\n//                 alert('OK button clicked');\r\n//             } else if (btnText === 'DEL') {\r\n//                 if (currentDisplayIndex > 0) {\r\n//                     currentDisplayIndex--;\r\n//                     displays[currentDisplayIndex].value = '';\r\n//                 }\r\n//             } else if (/^[0-9]$/.test(btnText)) {\r\n//                 if (currentDisplayIndex < displays.length) {\r\n//                     displays[currentDisplayIndex].value = btnText;\r\n//                     currentDisplayIndex++;\r\n//                 }\r\n//             }\r\n//         });\r\n//     });\r\n\r\n//     displays.forEach((display, index) => {\r\n//         display.addEventListener('focus', () => {\r\n//             currentDisplayIndex = index;\r\n//         });\r\n//     });\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  document.getElementById('singleNumber').addEventListener('input', function (e) {\r\n//     let value = e.target.value;\r\n//     if (value.length > 1) {\r\n//         e.target.value = value.slice(0, 1);\r\n//     }\r\n//     if (!/^\\d$/.test(value) && value !== \"\") {\r\n//         e.target.value = '';\r\n//     }\r\n// });\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     const buttons = document.querySelectorAll('.btn');\r\n//     const displays = document.querySelectorAll('.display');\r\n//     let currentDisplayIndex = 0;\r\n\r\n//     buttons.forEach(button => {\r\n//         button.addEventListener('click', () => {\r\n//             const value = button.textContent;\r\n//             if (value === 'OK') {\r\n//                 alert('OK button clicked');\r\n//             } else if (value === 'DEL') {\r\n//                 if (currentDisplayIndex > 0) {\r\n//                     currentDisplayIndex--;\r\n//                     displays[currentDisplayIndex].value = '';\r\n//                 }\r\n//             } else {\r\n//                 if (currentDisplayIndex < displays.length && /^[0-9]$/.test(value)) {\r\n//                     displays[currentDisplayIndex].value = value;\r\n//                     currentDisplayIndex++;\r\n//                 }\r\n//             }\r\n//         });\r\n//     });\r\n\r\n//     displays.forEach((display, index) => {\r\n//         display.addEventListener('focus', () => {\r\n//             currentDisplayIndex = index;\r\n//         });\r\n//     });\r\n// });\r\n\r\n"],"file":"play.dev.js"}